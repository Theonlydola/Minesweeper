#include <stdio.h>
#include <stdlib.h>
int r=0 , c=0;
void open (int disp[r][c], int ba[r][c], int x, int y);
void mines(int ba[r][c],int x, int y,int r,int c);
int main()
{
    int i,j;

    int x,y;

    scanf("%d%d",&r,&c);
    r+=2;
    c+=2;
    int ba[r][c];
    int disp[r][c];
    disp[0][0]=0;
    disp [r-1][0]=0;
    disp[0][c-1]=0;
    disp[r-1][c-1]=0;
    for (i=1;i<(c-1);i++)
    {
        disp[0][i]=i;
        disp[r-1][i]=i;
        disp[i][0]=i;
        disp[i][c-1]=i;
    }


    for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
        {
            ba[i][j]=10;
            disp[i][j]=88;
        }

    }
 for(i=0; i<(r); i++)
    {
        for(j=0; j<(c); j++)
        {
            if (disp[i][j]==1||disp[i][j]==2||disp[i][j]==3||disp[i][j]==4||disp[i][j]==5||disp[i][j]==6||disp[i][j]==7||disp[i][j]==8)
            printf("%d   ",disp[i][j]);
            else if(disp[i][j]==0)
                printf("    ");
                else printf("X   ");
        }
        printf("\n");
    }

    do
    {
        printf("play your move ");
        scanf("%d%d",&x,&y);
    }
    while(x>r||y>c||x==0||y==0);
    system("cls");


   // mines(ba,(x),(y),r,c);
   /*
       printf("\n\n\n\n\n\n");
           for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d   ",ba[i][j]);
        printf("\n");
    }
    */

//open(disp,ba[r][c],x,y);

mines(ba,(x),(y),(r),(c));
 for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d   ",ba[i][j]);
        printf("\n");
    }
     printf("\n"); printf("\n"); printf("\n");

open(disp,ba,(x),(y));

        /*     for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
        {


            if (disp[i][j]==88)
                disp[i][j]=0;
}
        printf("\n");
    }
    */

       for(i=0; i<(r); i++)
    {

        for(j=0; j<(c); j++)
        {if ((disp[i][j]>0)&&(disp[i][j]!=88))
            printf("%d   ",disp[i][j]);
            else if(disp[i][j]==0)
                printf("    ");
                else printf("X   ");
        }

        printf("\n");
    }

   char move;
   int T=0;
   int w=0;
   int m ;
    m=1+(((r-2)*(c-2))/10);


   while (w<m)
   {
       printf("\nChoose whether to open - flag - question - unmark  ");
       scanf("%c",&move);
       printf("\nplay your move\n");
       scanf("%d%d",&x,&y);
       if(move=='o')
       {
       if (disp[x][y]==ba[x][y])
       {
        if(disp[x][y-1]==88)
        disp[x][y-1]=ba[x][y-1];
        if(disp[x][y+1]==88)
        disp[x][y+1]=ba[x][y+1];
        if(disp[x+1][y-1]==88)
        disp[x+1][y-1]=ba[x+1][y-1];
        if(disp[x+1][y]==88)
        disp[x+1][y]=ba[x+1][y];
        if(disp[x+1][y+1]==88)
        disp[x+1][y+1]=ba[x+1][y+1];
        if(disp[x-1][y-1]==88)
        disp[x-1][y-1]=ba[x-1][y-1];
        if(disp[x-1][y+1]==88)
        disp[x-1][y+1]=ba[x-1][y+1];
        if(disp[x-1][y]==88)
        disp[x-1][y]=ba[x-1][y];
       }
       if (ba[x][y]==-1) {T=1;
       break;
       }
       else if (ba[x][y]==0) open(disp,ba,(x),(y));
       else disp[x][y]=ba[x][y];
       }
       else if (move=='f')
        {disp[x][y]=-2;
        if (ba[x][y]==-1)
        {
            w++;
        }

        }
       else if (move=='q')
        disp[x][y]=-3;
       else if (move=='u'){
            if (disp[x][y]==-2) disp[x][y]=88;
            if (disp[x][y]==-3)  disp[x][y]=88;
            }
        system("cls");
        for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {if (disp[i][j]>0)
            printf("%d   ",disp[i][j]);
            else if(disp[i][j]==0)
                printf("    ");
            else if (disp[i][j]==-2)
                 printf("f   ");
            else if (disp[x][y]==-3)
                 {printf("?   ");}

            else printf("X   ");
        }
         printf("\n");
   }




   }
    if (T==1)
        printf("You lose");
        else printf("you win");


    return 0;
}
void mines(int ba[r][c],int x, int y,int r,int c)
{
    int tc,tr;
    int m;
    int i,j;
    //time_t t;
    srand(time(NULL));
    m=1+(((r-2)*(c-2))/10);
    while (m!=0) // puts mines randomly
    {
        tr=rand()%(r-1);
        tc=rand()%(c-1);
        //  if ((tr!=(x-1)&&tr!=(x)&&tr!=(x+1))||(tc!=(y-1)&&tr!=(y)&&tr!=(y+1)))
              if (!((tr==0)||(tc==0)||((tr==(x-1))&&(tc==(y-1)))||((tr==(x-1))&&(tc==(y)))||((tr==(x-1))&&(tc==(y+1)))||((tr==(x))&&(tc==(y-1)))||((tr==(x))&&(tc==(y)))||((tr==(x))&&(tc==(y+1)))||((tr==(x+1))&&(tc==(y-1)))||((tr==(x+1))&&(tc==(y)))||((tr==(x+1))&&(tc==(y+1)))))
        {


                         if (ba[tr][tc]!=-1)
            {
                ba[tr][tc] = -1;
                m--;
            }




        }
    }
     for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
        {


            if (ba[i][j]==10)
                ba[i][j]=0;
}
        printf("\n");
    }
    for(i=1; i<r-1; i++)
    {
        for(j=1; j<c-1; j++)
        {
            if  (ba[i][j]!=-1)
            {
                if (ba[i-1][j-1]==-1)
                {
                    ba[i][j]++;
                }

                if (ba[i-1][j]==-1)
                {
                    ba[i][j]++;
                }

                if (ba[i-1][j+1]==-1)
                {
                    ba[i][j]++;
                }

                if (ba[i][j-1]==-1)
                  {
                       ba[i][j]++;
                  }
                if (ba[i][j+1]==-1)
                {
                    ba[i][j]++;
                }

                if (ba[i+1][j-1]==-1)
                  {
                    ba[i][j]++;
                  }
                if (ba[i+1][j]==-1)
                    {
                    ba[i][j]++;
                    }
                if (ba[i+1][j+1]==-1)
                    {
                    ba[i][j]++;
                    }
            }




        }


    }


}
void open(int disp[r][c], int ba[r][c], int x, int y)
{

        if (ba[x][y]==0)
{
        if(disp[x][y-1]==88)
        disp[x][y-1]=ba[x][y-1];
        if(disp[x][y+1]==88)
        disp[x][y+1]=ba[x][y+1];
        if(disp[x+1][y-1]==88)
        disp[x+1][y-1]=ba[x+1][y-1];
        if(disp[x+1][y]==88)
        disp[x+1][y]=ba[x+1][y];
        if(disp[x+1][y+1]==88)
        disp[x+1][y+1]=ba[x+1][y+1];
        if(disp[x-1][y-1]==88)
        disp[x-1][y-1]=ba[x-1][y-1];
        if(disp[x-1][y+1]==88)
        disp[x-1][y+1]=ba[x-1][y+1];
        if(disp[x-1][y]==88)
        disp[x-1][y]=ba[x-1][y];
        ba[x][y]=9;

}
        if ((ba[x][y-1]==0))
        open(disp,ba,x,y-1);
        if ((ba[x][y+1]==0))
        open(disp,ba,x,y+1);
        if ((ba[x-1][y]==0))
        open(disp,ba,x-1,y);
        if ((ba[x+1][y]==0))
        open(disp,ba,x+1,y);
        if ((ba[x-1][y-1]==0))
        open(disp,ba,x-1,y-1);
        if ((ba[x+1][y+1]==0))
        open (disp,ba,x+1,y+1);
        if ((ba[x+1][y-1]==0))
        open (disp,ba,x+1,y-1);
        if ((ba[x-1][y+1]==0))
        open (disp,ba,x-1,y+1);

int i,j;
for(i=1;i<(r-1);i++)
{
    for(j=1;j<(c-2);j++)
    {
        if (disp[i][j]==9)
            disp[i][j]=0;
    }
}
    }
