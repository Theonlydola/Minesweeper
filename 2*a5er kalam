#include <stdio.h>
#include <stdlib.h>
int r=0 , c=0;
void open (int disp[r][c], int ba[r][c], int x, int y);
void mines(int ba[r][c],int x, int y,int r,int c);
int main()
{
    int i,j;

    int x,y;

    scanf("%d%d",&r,&c);
    r+=2;
    c+=2;
    int ba[r][c];
    int disp[r][c];
    for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {
            ba[i][j]=10;
            disp[i][j]=8;
        }

    }

    for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d ",disp[i][j]);
        printf("\n");
    }
   printf("\n\n\n\n\n\n");

    do
    {
        printf("play your move ");
        scanf("%d%d",&x,&y);
    }
    while(x>r||y>c||x==0||y==0);
   // mines(ba,(x),(y),r,c);
       printf("\n\n\n\n\n\n");
           for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d   ",ba[i][j]);
        printf("\n");
    }


//open(disp,ba[r][c],x,y);

mines(ba,(x),(y),(r),(c));
 for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d   ",ba[i][j]);
        printf("\n");
    }
open(disp,ba,(x),(y));


        /*     for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
        {


            if (disp[i][j]==8)
                disp[i][j]=0;
}
        printf("\n");
    }
    */
  printf("\n\n");
       for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
            printf("%d   ",disp[i][j]);
        printf("\n");
    }



    return 0;
}
void mines(int ba[r][c],int x, int y,int r,int c)
{
    int tc,tr;
    int m;
    int i,j;
    //time_t t;
    srand(time(NULL));
    m=1+(((r-2)*(c-2))/10);
    while (m!=0) // puts mines randomly
    {
        tr=rand()%(r-1);
        tc=rand()%(c-1);
        //  if ((tr!=(x-1)&&tr!=(x)&&tr!=(x+1))||(tc!=(y-1)&&tr!=(y)&&tr!=(y+1)))
              if (!((tr==0)||(tc==0)||((tr==(x-1))&&(tc==(y-1)))||((tr==(x-1))&&(tc==(y)))||((tr==(x-1))&&(tc==(y+1)))||((tr==(x))&&(tc==(y-1)))||((tr==(x))&&(tc==(y)))||((tr==(x))&&(tc==(y+1)))||((tr==(x+1))&&(tc==(y-1)))||((tr==(x+1))&&(tc==(y)))||((tr==(x+1))&&(tc==(y+1)))))
        {


                         if (ba[tr][tc]!=9)
            {
                ba[tr][tc] = 9;
                m--;
            }




        }
    }
     for(i=1; i<(r-1); i++)
    {
        for(j=1; j<(c-1); j++)
        {


            if (ba[i][j]==10)
                ba[i][j]=0;
}
        printf("\n");
    }
    for(i=1; i<r-1; i++)
    {
        for(j=1; j<c-1; j++)
        {
            if  (ba[i][j]!=9)
            {
                if (ba[i-1][j-1]==9)
                {
                    ba[i][j]++;
                }

                if (ba[i-1][j]==9)
                {
                    ba[i][j]++;
                }

                if (ba[i-1][j+1]==9)
                {
                    ba[i][j]++;
                }

                if (ba[i][j-1]==9)
                  {
                       ba[i][j]++;
                  }
                if (ba[i][j+1]==9)
                {
                    ba[i][j]++;
                }

                if (ba[i+1][j-1]==9)
                  {
                    ba[i][j]++;
                  }
                if (ba[i+1][j]==9)
                    {
                    ba[i][j]++;
                    }
                if (ba[i+1][j+1]==9)
                    {
                    ba[i][j]++;
                    }
            }




        }


    }


}
void open(int disp[r][c], int ba[r][c], int x, int y)
{

        if (ba[x][y]==0)
{
    if(disp[x][y-1]==8)
        disp[x][y-1]=ba[x][y-1];
        if(disp[x][y+1]==8)
        disp[x][y+1]=ba[x][y+1];
        if(disp[x+1][y-1]==8)
        disp[x+1][y-1]=ba[x+1][y-1];
        if(disp[x+1][y]==8)
        disp[x+1][y]=ba[x+1][y];
        if(disp[x+1][y+1]==8)
        disp[x+1][y+1]=ba[x+1][y+1];
        if(disp[x-1][y-1]==8)
        disp[x-1][y-1]=ba[x-1][y-1];
        if(disp[x-1][y+1]==8)
        disp[x-1][y+1]=ba[x-1][y+1];
        if(disp[x-1][y]==8)
        disp[x-1][y]=ba[x-1][y];
        ba[x][y]=9;

}
        if ((ba[x][y-1]==0))
        open(disp,ba,x,y-1);
        if ((ba[x][y+1]==0))
        open(disp,ba,x,y+1);
        if ((ba[x-1][y]==0))
        open(disp,ba,x-1,y);
        if ((ba[x+1][y]==0))
        open(disp,ba,x+1,y);
        if ((ba[x-1][y-1]==0))
        open(disp,ba,x-1,y-1);
        if ((ba[x+1][y+1]==0))
        open (disp,ba,x+1,y+1);
        if ((ba[x+1][y-1]==0))
        open (disp,ba,x+1,y-1);
        if ((ba[x-1][y+1]==0))
        open (disp,ba,x-1,y+1);



    }









